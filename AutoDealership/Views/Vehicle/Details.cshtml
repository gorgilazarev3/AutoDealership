@model AutoDealership.Models.VehicleDetailsViewModel
@using AutoDealership.Models

@{
    ViewBag.Title = "Details";
}


@*<div>
        <h4>Vehicle</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.BrandId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BrandId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Model)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Model)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FuelType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FuelType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BodyStyle)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BodyStyle)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Transmission)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Transmission)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Year)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Year)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mileage)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Mileage)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DrivetrainType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DrivetrainType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Color)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Color)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.InteriorColor)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.InteriorColor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FuelEfficiency)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FuelEfficiency)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Horsepower)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Horsepower)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Torque)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Torque)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Engine)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Engine)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsForLease)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsForLease)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsForRent)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsForRent)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MonthlyPayment)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MonthlyPayment)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DailyPayment)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DailyPayment)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.VehicleStatus)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.VehicleStatus)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.InStock)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.InStock)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CoverImageURL)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CoverImageURL)
            </dd>

        </dl>
    </div>*@

<div class="container" style="padding-top: 5em">
    <div class="row">
        <div class="col-lg-8" style="padding-right: 10em">
            <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="true">
                @*<div class="carousel-indicators">
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                    <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
                </div>*@
                <div class="carousel-inner">
                    @*<div class="carousel-item active">
                            <img src="@Html.DisplayFor(model => model.Vehicle.CoverImageURL)" class="d-block w-100 img-thumbnail" alt="...">
                        </div>*@
                    @{
                        var i = 0;
                        if (Model.Vehicle.ImagesURL != null)
                        {
                            var images = Model.Vehicle.ImagesURL.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                            foreach (var image in images)
                            {
                                if (i == 0)
                                {
                                    <div class="carousel-item active">
                                        <img src="@image" class="d-block w-100" alt="Vehicle Image">
                                    </div>
                                }
                                else
                                {
                                    <div class="carousel-item">
                                        <img src="@image" class="d-block w-100" alt="Vehicle Image">
                                    </div>
                                }
                                i++;
                            }
                        }

                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            <div class="container">
                <p>@Html.DisplayFor(model => model.Vehicle.Description)</p>
            </div>
            <div class="container">
                <h4 class="display-6">List of features:</h4>
                <ul>
                    @{
                        if (Model.Vehicle.Features != null)
                        {
                            var features = Model.Vehicle.Features.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                            foreach (var feature in features)
                            {
                                <li>@feature</li>
                            }
                        }

                    }
                </ul>
            </div>

            @*<img src="@Url.Content(Model.Vehicle.CoverImageURL)" />*@
        </div>
        <div class="col-lg-4">
            <div>
                <h1>@Html.DisplayFor(model => model.Vehicle.Year) @Html.DisplayFor(model => model.Vehicle.Model)</h1>
            </div>

            <div>
                <h6>
                    <img src="@Html.DisplayFor(model => model.Brand.LogoURL)" style="max-width: 50px;" />
                    @Html.DisplayFor(model => model.Brand.Name)
                </h6>
            </div>
            <hr />
            <div class="accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <h4>Specs</h4>
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Engine):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Engine)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Horsepower):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Horsepower) HP (@String.Format("{0:0.00}", Model.Vehicle.Horsepower / 1.341) KW)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Torque):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Torque) nm
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.FuelType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.FuelType)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.FuelEfficiency):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.FuelEfficiency) l/100km | @String.Format("{0:0.00}", 235.214583 / Model.Vehicle.FuelEfficiency) MPG
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.BodyStyle):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.BodyStyle)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.DrivetrainType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.DrivetrainType)
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Transmission.TransmissionType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Transmission.TransmissionType)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Transmission.NumberSpeeds):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Transmission.NumberSpeeds)
                            </div>


                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <h4>Vehicle Condition</h4>
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.VehicleStatus):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.VehicleStatus)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Mileage):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Mileage) km | @String.Format("{0:0}", Model.Vehicle.Mileage / 1.609) mi
                            </div>

                            <br />

                            <hr />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Color):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Color)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.InteriorColor):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.InteriorColor)
                            </div>



                        </div>
                    </div>
                </div>
                @*<div class="accordion-item">
                        <h2 class="accordion-header" id="headingThree">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                Accordion Item #3
                            </button>
                        </h2>
                        <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                            </div>
                        </div>
                    </div>*@
            </div>

            @*HERE STARTS THE PRICE PART*@

            @if (Model.Vehicle.InStock)
            {
                <div class="text-center" style="padding-top: 5em">
                    <div class="alert alert-secondary" role="alert">
                        <h4>@Html.DisplayFor(model => model.Vehicle.Price)$</h4>

                        <div>
                            <button data-bs-target="#reserve-vehicle-modal" data-bs-toggle="modal" class="btn btn-lg btn-primary" id="reserve-btn">Reserve now</button>
                        </div>


                        <hr />
                        <div>
                            <h5>or</h5>
                        </div>

                        <div>
                            <button id="schedule-test-drive-btn" class="btn btn-warning text-primary fw-semibold">Schedule a test drive</button>
                        </div>


                        @*@if (Model.Vehicle.IsForLease)
                            {
                                <hr />
                                <div>
                                    <h5>or</h5>
                                </div>

                                <div>
                                    <button class="btn btn-warning">Lease for @Html.DisplayFor(model => model.Vehicle.MonthlyPayment)$ monthly</button>
                                </div>
                            }*@


                    </div>
                </div>

            }

        </div>
    </div>
</div>

@*<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Vehicle.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>*@

<!-- Reservation Modal -->
<div class="modal fade" id="reserve-vehicle-modal" tabindex="-1" aria-labelledby="reserve-vehicle-modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reserve-vehicle-modalLabel">Reserve this vehicle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    var partial_view_model = new VehicleReservation();
                    partial_view_model.UserId = User.Identity.Name;
                    partial_view_model.VehicleId = Model.Vehicle.Id;
                    partial_view_model.IsTestDrive = false;
                }
                @Html.Partial("_ReserveVehicle", partial_view_model)
            </div>
            @*<div class="modal-footer justify-content-center">*@
            @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
            @*<button type="submit" class="btn btn-primary submit-role-btn">Save changes</button>*@
            <!--</div>-->
        </div>
    </div>
</div>
<!-- Reservation Modal End-->

<!-- Test Drive Modal -->
<div class="modal fade" id="test-drive-modal" tabindex="-1" aria-labelledby="test-drive-modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="test-drive-modalLabel">Schedule a test drive</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{
                    partial_view_model = new VehicleReservation();
                    partial_view_model.UserId = User.Identity.Name;
                    partial_view_model.VehicleId = Model.Vehicle.Id;
                    partial_view_model.IsTestDrive = true;
                }
                @Html.Partial("_ReserveVehicle", partial_view_model)
            </div>
            @*<div class="modal-footer justify-content-center">*@
            @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
            @*<button type="submit" class="btn btn-primary submit-role-btn">Save changes</button>*@
            <!--</div>-->
        </div>
    </div>
</div>
<!-- Test Drive Modal End-->

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#reserve-btn").click(function () {
                $("#reserve-vehicle-modal").modal('show');
            });

            $("#schedule-test-drive-btn").click(function () {
                $("#test-drive-modal").modal('show');
            });
            $("#confirm-reservation-btn, #confirm-test-drive-btn").click(function (e) {
                var isLoggedIn = @User.Identity.IsAuthenticated.ToString().ToLower();
                var returnUrl = window.location.pathname;
                if (!isLoggedIn) {
                    e.preventDefault();
                    //bootbox.alert("You must be logged in to make a reservation");
                    $("#reserve-vehicle-modal").modal('hide');
                    window.location.href = window.location.origin + "/Account/Login?ReturnUrl=" + returnUrl;
                    //$.ajax({
                    //    url: '/Account/Login',
                    //    type: 'GET',
                    //    data: { returnUrl: returnUrl },
                    //    async: false,
                    //    succcess: function (data) {
                    //        alert(data);
                    //    },
                    //    error: function (err) {
                    //        alert(err);
                    //    }
                    //});
                }
                @*else if (isLoggedIn) {
                    @{
                    var db = new ApplicationDbContext();
                    var user = db.Users.Where(u => u.UserName.Equals(User.Identity.Name)).FirstOrDefault();
                    }
                    if (@user != null && @user.ReservedVehicleId != null) {
                    bootbox.alert("You cannot reserve a vehicle since you already have one reserved!");
                    }
                }*@

            });
        });
    </script>
}